plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    implementation group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: '1.8.4'

// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.6.6'

// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-actuator
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.6.6'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.6.6'


    // https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.0.3'

// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.6.6'

    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: '2.6.5') {
        exclude(group: 'io.lettuce')
    }
// https://mvnrepository.com/artifact/redis.clients/jedis
    implementation group: 'redis.clients', name: 'jedis', version: '3.8.0'

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: '2.6.6'

    // https://mvnrepository.com/artifact/io.github.resilience4j/resilience4j-micrometer
    implementation group: 'io.github.resilience4j', name: 'resilience4j-micrometer', version: '1.7.1'

    // https://mvnrepository.com/artifact/io.github.resilience4j/resilience4j-bulkhead
    implementation group: 'io.github.resilience4j', name: 'resilience4j-bulkhead', version: '1.7.1'

    // https://mvnrepository.com/artifact/io.github.resilience4j/resilience4j-circuitbreaker
    implementation group: 'io.github.resilience4j', name: 'resilience4j-circuitbreaker', version: '1.7.1'

// https://mvnrepository.com/artifact/io.github.resilience4j/resilience4j-ratelimiter
    implementation group: 'io.github.resilience4j', name: 'resilience4j-ratelimiter', version: '1.7.1'

// https://mvnrepository.com/artifact/io.github.resilience4j/resilience4j-retry
    implementation group: 'io.github.resilience4j', name: 'resilience4j-retry', version: '1.7.1'
// https://mvnrepository.com/artifact/io.github.resilience4j/resilience4j-timelimiter
    implementation group: 'io.github.resilience4j', name: 'resilience4j-timelimiter', version: '1.7.1'

// https://mvnrepository.com/artifact/io.github.resilience4j/resilience4j-all
    implementation group: 'io.github.resilience4j', name: 'resilience4j-all', version: '1.7.1'

    implementation project(":Shared")


}


// necessary for Docker build script
jar {
    enabled = false
}

bootJar {
    mainClass = "com.chaos.springboot.Main"
}

application {
    mainClass = "com.chaos.springboot.Main"
}

springBoot {
    mainClass = "com.chaos.springboot.Main"
}

test {
    useJUnitPlatform()
}

task wrapper(type: Wrapper) {
    gradleVersion = '7.4'
}

task prepareKotlinBuildScriptModel {

}
