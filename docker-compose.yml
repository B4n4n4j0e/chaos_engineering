version: "3.9"
volumes:
  grafana-volume-1:
  prometheus-volume-1:
  database-volume-1:
  database-volume-2:

  redis-volume-2:
  redis-volume-3:
  redis-volume-4:
  redis-volume-5:
  redis-volume-6:
  redis-volume-7:

networks:
  grafana:
  metrics:
  database:
  database-2:

  redis:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

services:
  price-service:
    depends_on:
      - mariadb-price
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
    build: .
    ports:
      - "8081:8081"
    networks:
      - metrics
      - database-2
    command:
      - ':PriceService:run'

  product-service:
    depends_on:
      - mariadb
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
    build: .
    ports:
      - "8080:8080"
    networks:
      - metrics
      - database
      - redis
    command:
      - ':ProductService:run'

  mariadb:
    image: mariadb:10.8
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_DATABASE: "spring"
      MYSQL_USER: "spring"
      MYSQL_PASSWORD: "spring"
    volumes:
      - database-volume-1:/var/lib/mysql
      - ./ProductService/src/main/resources/init.sql:/data/application/init.sql
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 200M
    command: --init-file /data/application/init.sql
    networks:
      database:

  mariadb-price:
    image: mariadb:10.8
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_DATABASE: "spring"
      MYSQL_USER: "spring"
      MYSQL_PASSWORD: "spring"
    volumes:
      - database-volume-2:/var/lib/mysql
      - ./PriceService/src/main/resources/init.sql:/data/application/init.sql
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 200M
    command: --init-file /data/application/init.sql
    networks:
      database-2:


  prometheus:
    image: prom/prometheus:v2.34.0
    volumes:
      - ./resources/prometheus:/etc/prometheus
      - prometheus-volume-1:/prometheus
    networks:
      - metrics
      - grafana
    ports:
      - "9090:9090"
  grafana:
    ports:
      - "3000:3000"
    image: grafana/grafana:8.4.6
    environment:
      - "GF_AUTH_ANONYMOUS_ENABLED=true"
      - "GF_AUTH_DISABLE_LOGIN_FORM=true"
      - "GF_AUTH_ANONYMOUS_ORG_ROLE=Admin"
    volumes:
      - grafana-volume-1:/var/lib/grafana
    networks:
      - grafana

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.38.6
    ports:
      - "8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /dev/disk/:/dev/disk:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - metrics

  node-exporter:
    image: prom/node-exporter:v1.3.1
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    # Keep uncommented for windows - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
     # Keep uncommented for windows - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
     # Uncomment for running in vm - '--no-collector.powersupplyclass'
    expose:
      - "9100"
    networks:
      - metrics

  node-1-redis:
    image: redis:6.2.6
    ports:
      - "6379"
    volumes:
      - redis-volume-2:/data
      - ./resources/redis/1/:/redis_config
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 200M
    networks:
      redis:
        ipv4_address: 173.17.0.3
    entrypoint:
      - "redis-server"
      - "/redis_config/redis.conf"
  node-2-redis:
    image: redis:6.2.6
    ports:
      - "6379"
    volumes:
      - redis-volume-3:/data
      - ./resources/redis/2/:/redis_config
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 200M
    networks:
      redis:
        ipv4_address: 173.17.0.4

    entrypoint:
      - "redis-server"
      - "/redis_config/redis.conf"

  node-3-redis:
    image: redis:latest
    ports:
      - "6379"
    volumes:
      - redis-volume-4:/data
      - ./resources/redis/3/:/redis_config
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 200M
    networks:
      redis:
        ipv4_address: 173.17.0.5

    entrypoint:
      - "redis-server"
      - "/redis_config/redis.conf"

  node-4-redis:
    image: redis:6.2.6
    ports:
      - "6379"
    volumes:
      - redis-volume-5:/data
      - ./resources/redis/1/:/redis_config
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 200M
    networks:
      redis:
        ipv4_address: 173.17.0.6
    entrypoint:
      - "redis-server"
      - "/redis_config/redis.conf"

  node-5-redis:
    image: redis:6.2.6
    ports:
      - "6379"
    volumes:
      - redis-volume-6:/data
      - ./resources/redis/2/:/redis_config
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 200M
    networks:
      redis:
        ipv4_address: 173.17.0.7

    entrypoint:
      - "redis-server"
      - "/redis_config/redis.conf"

  node-6-redis:
    image: redis:6.2.6
    ports:
      - "6379"
    volumes:
      - redis-volume-7:/data
      - ./resources/redis/3/:/redis_config
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 200M
    networks:
      redis:
        ipv4_address: 173.17.0.8
    entrypoint:
      - "redis-server"
      - "/redis_config/redis.conf"

  redis-exporter:
    image: oliver006/redis_exporter
    environment:
      REDIS_ADDR: " "
    depends_on:
      - prometheus
    ports:
      - "9121"
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 200M
    networks:
      metrics:
      redis:
    command:
      - "-redis.addr=' '"
      - "-is-cluster"